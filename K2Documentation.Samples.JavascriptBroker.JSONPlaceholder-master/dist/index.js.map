{"version":3,"file":"index.js","sources":["../src/index.ts"],"sourcesContent":["import '@k2oss/k2-broker-core';\r\n\r\nmetadata = {\r\n\t\"systemName\": \"JSONPlaceholder\",\r\n\t\"displayName\": \"JSONPlaceholder Broker\",\r\n\t\"description\": \"Sample broker for JSONPlaceholder\"\r\n};\r\n\r\nondescribe = function() {\r\n    postSchema({ objects: {\r\n                \"com.k2.sample.json.posts\": {\r\n                    displayName: \"Posts\",\r\n                    description: \"Manages Posts\",\r\n                    properties: {\r\n                        \"com.k2.sample.json.posts.id\": {\r\n                            displayName: \"ID\",\r\n                            type: \"number\"\r\n                        },\r\n                        \"com.k2.sample.json.posts.userId\": {\r\n                            displayName: \"User ID\",\r\n                            type: \"number\"\r\n                        },\r\n                        \"com.k2.sample.json.posts.title\": {\r\n                            displayName: \"Title\",\r\n                            type: \"string\"\r\n                        },\r\n                        \"com.k2.sample.json.posts.body\": {\r\n                            displayName: \"Body\",\r\n                            type: \"string\"\r\n                        }\r\n                    },\r\n                    methods: {\r\n                        \"com.k2.sample.json.posts.getList\": {\r\n                            displayName: \"Get Posts List\",\r\n                            type: \"list\",\r\n                            outputs: [ \"com.k2.sample.json.posts.id\", \"com.k2.sample.json.posts.userId\", \"com.k2.sample.json.posts.title\", \"com.k2.sample.json.posts.body\" ]\r\n                        },\r\n                        \"com.k2.sample.json.posts.getById\": {\r\n                            displayName: \"Get Post By ID\",\r\n                            type: \"read\",\r\n                            inputs: [\"com.k2.sample.json.posts.id\"],                   \r\n                            requiredInputs: [\"com.k2.sample.json.posts.id\"],\r\n                            outputs: [ \"com.k2.sample.json.posts.id\", \"com.k2.sample.json.posts.userId\", \"com.k2.sample.json.posts.title\", \"com.k2.sample.json.posts.body\" ]\r\n                        },\r\n                        \"com.k2.sample.json.posts.getByUserId\": {\r\n                            displayName: \"Get Posts By User ID\",\r\n                            type: \"list\",\r\n                            inputs: [\"com.k2.sample.json.posts.userId\"],   \r\n                            requiredInputs: [\"com.k2.sample.json.posts.userId\"],\r\n                            outputs: [ \"com.k2.sample.json.posts.id\", \"com.k2.sample.json.posts.userId\", \"com.k2.sample.json.posts.title\", \"com.k2.sample.json.posts.body\" ]\r\n                        },\r\n                        \"com.k2.sample.json.posts.create\": {\r\n                            displayName: \"Create Post\",\r\n                            type: \"create\",\r\n                            inputs: [\"com.k2.sample.json.posts.userId\", \"com.k2.sample.json.posts.title\", \"com.k2.sample.json.posts.body\"],\r\n                            outputs: [ \"com.k2.sample.json.posts.id\", \"com.k2.sample.json.posts.userId\", \"com.k2.sample.json.posts.title\", \"com.k2.sample.json.posts.body\" ]\r\n                        },\r\n                        \"com.k2.sample.json.posts.update\": {\r\n                            displayName: \"Update Post\",\r\n                            type: \"update\",\r\n                            inputs: [\"com.k2.sample.json.posts.id\",\"com.k2.sample.json.posts.userId\", \"com.k2.sample.json.posts.title\", \"com.k2.sample.json.posts.body\"],\r\n                            requiredInputs: [\"com.k2.sample.json.posts.id\"],\r\n                            outputs: [ \"com.k2.sample.json.posts.id\", \"com.k2.sample.json.posts.userId\", \"com.k2.sample.json.posts.title\", \"com.k2.sample.json.posts.body\" ]\r\n                        },\r\n                        \"com.k2.sample.json.posts.delete\": {\r\n                            displayName: \"Delete Post\",\r\n                            type: \"delete\",\r\n                            inputs: [\"com.k2.sample.json.posts.id\"],\r\n                            requiredInputs: [\"com.k2.sample.json.posts.id\"]\r\n                        }\r\n                    }\r\n                },\r\n                \"com.k2.sample.json.comments\": {\r\n                    displayName: \"Comments\",\r\n                    description: \"Manages Comments\",\r\n                    properties: {\r\n                        \"com.k2.sample.json.comments.id\": {\r\n                            displayName: \"ID\",\r\n                            type: \"number\"\r\n                        },\r\n                        \"com.k2.sample.json.comments.postId\": {\r\n                            displayName: \"Post ID\",\r\n                            type: \"number\"\r\n                        },\r\n                        \"com.k2.sample.json.comments.name\": {\r\n                            displayName: \"Name\",\r\n                            type: \"string\"\r\n                        },\r\n                        \"com.k2.sample.json.comments.email\": {\r\n                            displayName: \"Email\",\r\n                            type: \"string\"\r\n                        },\r\n                        \"com.k2.sample.json.comments.body\": {\r\n                            displayName: \"Body\",\r\n                            type: \"string\"\r\n                        }\r\n                    },\r\n                    methods: {\r\n                        \"com.k2.sample.json.comments.getList\": {\r\n                            displayName: \"Get Comments List\",\r\n                            type: \"list\",\r\n                            outputs: [ \"com.k2.sample.json.comments.id\", \"com.k2.sample.json.comments.postId\", \"com.k2.sample.json.comments.name\", \"com.k2.sample.json.comments.email\", \"com.k2.sample.json.comments.body\" ]\r\n                        },\r\n                        \"com.k2.sample.json.comments.getById\": {\r\n                            displayName: \"Get Comment By ID\",\r\n                            type: \"read\",\r\n                            inputs: [\"com.k2.sample.json.comments.id\"],\r\n                            requiredInputs: [\"com.k2.sample.json.comments.id\"],\r\n                            outputs: [ \"com.k2.sample.json.comments.id\", \"com.k2.sample.json.comments.postId\", \"com.k2.sample.json.comments.name\", \"com.k2.sample.json.comments.email\", \"com.k2.sample.json.comments.body\" ]\r\n                        },\r\n                        \"com.k2.sample.json.comments.getByPostId\": {\r\n                            displayName: \"Get Comments By Post ID\",\r\n                            type: \"list\",\r\n                            inputs: [\"com.k2.sample.json.comments.postId\"],      \r\n                            requiredInputs: [\"com.k2.sample.json.comments.postId\"],\r\n                            outputs: [ \"com.k2.sample.json.comments.id\", \"com.k2.sample.json.comments.postId\", \"com.k2.sample.json.comments.name\", \"com.k2.sample.json.comments.email\", \"com.k2.sample.json.comments.body\" ]\r\n                        }\r\n                    }\r\n                },\r\n                \"com.k2.sample.json.todos\": {\r\n                    displayName: \"To Do\",\r\n                    description: \"Manages To Dos\",\r\n                    properties: {\r\n                        \"com.k2.sample.json.todos.id\": {\r\n                            displayName: \"ID\",\r\n                            type: \"number\"\r\n                        },\r\n                        \"com.k2.sample.json.todos.userId\": {\r\n                            displayName: \"User ID\",\r\n                            type: \"number\"\r\n                        },\r\n                        \"com.k2.sample.json.todos.title\": {\r\n                            displayName: \"Title\",\r\n                            type: \"string\"\r\n                        },\r\n                        \"com.k2.sample.json.todos.completed\": {\r\n                            displayName: \"Completed\",\r\n                            type: \"boolean\"\r\n                        }\r\n                    },\r\n                    methods: {\r\n                        \"com.k2.sample.json.todos.getList\": {\r\n                            displayName: \"Get To Dos List\",\r\n                            type: \"list\",\r\n                            outputs: [ \"com.k2.sample.json.todos.id\", \"com.k2.sample.json.todos.userId\", \"com.k2.sample.json.todos.title\", \"com.k2.sample.json.todos.completed\" ]\r\n                        },\r\n                        \"com.k2.sample.json.todos.getById\": {\r\n                            displayName: \"Get To Do By ID\",\r\n                            type: \"read\",\r\n                            inputs: [\"com.k2.sample.json.todos.id\"],\r\n                            requiredInputs: [\"com.k2.sample.json.todos.id\"],\r\n                            outputs: [ \"com.k2.sample.json.todos.id\", \"com.k2.sample.json.todos.userId\", \"com.k2.sample.json.todos.title\", \"com.k2.sample.json.todos.completed\" ]\r\n                        }\r\n                    }\r\n                },\r\n                \"com.k2.sample.json.users\": {\r\n                    displayName: \"Users\",\r\n                    description: \"Manages Users\",\r\n                    properties: {\r\n                        \"com.k2.sample.json.users.id\": {\r\n                            displayName: \"ID\",\r\n                            type: \"number\"\r\n                        },\r\n                        \"com.k2.sample.json.users.name\": {\r\n                            displayName: \"Name\",\r\n                            type: \"string\"\r\n                        },\r\n                        \"com.k2.sample.json.users.username\": {\r\n                            displayName: \"User Name\",\r\n                            type: \"string\"\r\n                        },\r\n                        \"com.k2.sample.json.users.email\": {\r\n                            displayName: \"Email\",\r\n                            type: \"string\"\r\n                        },\r\n                        \"com.k2.sample.json.users.address.street\": {\r\n                            displayName: \"Address.Street\",\r\n                            type: \"string\"\r\n                        },\r\n                        \"com.k2.sample.json.users.address.suite\": {\r\n                            displayName: \"Address.Suite\",\r\n                            type: \"string\"\r\n                        },\r\n                        \"com.k2.sample.json.users.address.city\": {\r\n                            displayName: \"Address.City\",\r\n                            type: \"string\"\r\n                        },\r\n                        \"com.k2.sample.json.users.address.geo.lat\": {\r\n                            displayName: \"Address.Geo.Latitude\",\r\n                            type: \"string\"\r\n                        },\r\n                        \"com.k2.sample.json.users.address.geo.lng\": {\r\n                            displayName: \"Address.Get.Longitude\",\r\n                            type: \"string\"\r\n                        },\r\n                        \"com.k2.sample.json.users.phone\": {\r\n                            displayName: \"Phone\",\r\n                            type: \"string\"\r\n                        },\r\n                        \"com.k2.sample.json.users.website\": {\r\n                            displayName: \"Website\",\r\n                            type: \"string\"\r\n                        },\r\n                        \"com.k2.sample.json.users.company.name\": {\r\n                            displayName: \"Company.Name\",\r\n                            type: \"string\"\r\n                        },\r\n                        \"com.k2.sample.json.users.company.catchPhrase\": {\r\n                            displayName: \"Company.CatchPhrase\",\r\n                            type: \"string\"\r\n                        },\r\n                        \"com.k2.sample.json.users.company.bs\": {\r\n                            displayName: \"Company.BS\",\r\n                            type: \"string\"\r\n                        }\r\n                    },\r\n                    methods: {\r\n                        \"com.k2.sample.json.users.getList\": {\r\n                            displayName: \"Get Users List\",\r\n                            type: \"list\",\r\n                            outputs: [\"com.k2.sample.json.users.id\",\r\n                            \"com.k2.sample.json.users.name\",\r\n                            \"com.k2.sample.json.users.username\",\r\n                            \"com.k2.sample.json.users.email\",\r\n                            \"com.k2.sample.json.users.address.street\",\r\n                            \"com.k2.sample.json.users.address.suite\",\r\n                            \"com.k2.sample.json.users.address.city\",\r\n                            \"com.k2.sample.json.users.address.geo.lat\",\r\n                            \"com.k2.sample.json.users.address.geo.lng\",\r\n                            \"com.k2.sample.json.users.phone\",\r\n                            \"com.k2.sample.json.users.website\",\r\n                            \"com.k2.sample.json.users.company.name\",\r\n                            \"com.k2.sample.json.users.company.catchPhrase\",\r\n                            \"com.k2.sample.json.users.company.bs\"]\r\n                        },\r\n                        \"com.k2.sample.json.users.getById\": {\r\n                            displayName: \"Get Users By ID\",\r\n                            type: \"read\",\r\n                            inputs: [\"com.k2.sample.json.users.id\"],\r\n                            requiredInputs: [\"com.k2.sample.json.users.id\"],\r\n                            outputs: [\"com.k2.sample.json.users.id\",\r\n                            \"com.k2.sample.json.users.name\",\r\n                            \"com.k2.sample.json.users.username\",\r\n                            \"com.k2.sample.json.users.email\",\r\n                            \"com.k2.sample.json.users.address.street\",\r\n                            \"com.k2.sample.json.users.address.suite\",\r\n                            \"com.k2.sample.json.users.address.city\",\r\n                            \"com.k2.sample.json.users.address.geo.lat\",\r\n                            \"com.k2.sample.json.users.address.geo.lng\",\r\n                            \"com.k2.sample.json.users.phone\",\r\n                            \"com.k2.sample.json.users.website\",\r\n                            \"com.k2.sample.json.users.company.name\",\r\n                            \"com.k2.sample.json.users.company.catchPhrase\",\r\n                            \"com.k2.sample.json.users.company.bs\"]                        }\r\n                    }\r\n            }\r\n        }\r\n    }\r\n    )};\r\n\r\nonexecute = function(objectName, methodName, parameters, properties) {\r\n    switch (objectName)\r\n    {\r\n        case \"com.k2.sample.json.posts\": onexecutePosts(methodName, parameters, properties); break;\r\n        case \"com.k2.sample.json.comments\": onexecuteComments(methodName, parameters, properties); break;\r\n        case \"com.k2.sample.json.todos\": onexecuteToDos(methodName, parameters, properties); break;\r\n        case \"com.k2.sample.json.users\": onexecuteUsers(methodName, parameters, properties); break;\r\n        default: throw new Error(\"The object \" + objectName + \" is not supported.\");\r\n    }\r\n}\r\n\r\nfunction onexecutePosts(methodName: string, parameters: SingleRecord, properties: SingleRecord) {\r\n    switch (methodName)\r\n    {\r\n        case \"com.k2.sample.json.posts.getList\": onexecutePostsGetList(parameters, properties); break;\r\n        case \"com.k2.sample.json.posts.getById\": onexecutePostsGetById(parameters, properties); break;\r\n        case \"com.k2.sample.json.posts.getByUserId\": onexecutePostsGetByUserId(parameters, properties); break;\r\n        case \"com.k2.sample.json.posts.create\": onexecutePostsCreate(parameters, properties); break;\r\n        case \"com.k2.sample.json.posts.update\": onexecutePostsUpdate(parameters, properties); break;\r\n        case \"com.k2.sample.json.posts.delete\": onexecutePostsDelete(parameters, properties); break;\r\n        case \"com.k2.sample.json.posts.delete\": onexecuteToDosGetList(parameters, properties); break;\r\n        default: throw new Error(\"The method \" + methodName + \" is not supported.\");\r\n    }\r\n}\r\n\r\nfunction onexecuteComments(methodName: string, parameters: SingleRecord, properties: SingleRecord) {\r\n    switch (methodName)\r\n    {\r\n        case \"com.k2.sample.json.comments.getList\": onexecuteCommentsGetList(parameters, properties); break;\r\n        case \"com.k2.sample.json.comments.getById\": onexecuteCommentsGetById(parameters, properties); break;\r\n        case \"com.k2.sample.json.comments.getByPostId\": onexecuteCommentsGetByPostId(parameters, properties); break;\r\n        default: throw new Error(\"The method \" + methodName + \" is not supported.\");\r\n    }\r\n}\r\n\r\nfunction onexecuteToDos(methodName: string, parameters: SingleRecord, properties: SingleRecord) {\r\n    switch (methodName)\r\n    {\r\n        case \"com.k2.sample.json.todos.getList\": onexecuteToDosGetList(parameters, properties); break;\r\n        case \"com.k2.sample.json.todos.getById\": onexecuteToDosGetById(parameters, properties); break;\r\n        default: throw new Error(\"The method \" + methodName + \" is not supported.\");\r\n    }\r\n}\r\n\r\nfunction onexecuteUsers(methodName: string, parameters: SingleRecord, properties: SingleRecord) {\r\n    switch (methodName)\r\n    {\r\n        case \"com.k2.sample.json.users.getList\": onexecuteUsersGetList(parameters, properties); break;\r\n        case \"com.k2.sample.json.users.getById\": onexecuteUsersGetById(parameters, properties); break;\r\n        default: throw new Error(\"The method \" + methodName + \" is not supported.\");\r\n    }\r\n}\r\nfunction onexecutePostsGetList(parameters: SingleRecord, properties: SingleRecord) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange = function() {\r\n        if (xhr.readyState !== 4) return;\r\n        if (xhr.status !== 200) throw new Error(\"Failed with status \" + xhr.status);\r\n        \r\n        //console.log(xhr.responseText);\r\n        var obj = JSON.parse(xhr.responseText);\r\n        for (var key in obj) {\r\n            postResult({\r\n                \"com.k2.sample.json.posts.id\": obj[key].id,\r\n                \"com.k2.sample.json.posts.userId\": obj[key].userId,\r\n                \"com.k2.sample.json.posts.title\": obj[key].title,\r\n                \"com.k2.sample.json.posts.body\": obj[key].body\r\n            });\r\n        }\r\n    };\r\n    xhr.open(\"GET\", 'https://jsonplaceholder.typicode.com/posts');\r\n    xhr.send();\r\n}\r\n\r\nfunction onexecutePostsGetById(parameters: SingleRecord, properties: SingleRecord) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange = function() {\r\n        if (xhr.readyState !== 4) return;\r\n        if (xhr.status !== 200) throw new Error(\"Failed with status \" + xhr.status);\r\n\r\n        //console.log(xhr.responseText);\r\n        var obj = JSON.parse(xhr.responseText);\r\n        postResult({\r\n            \"com.k2.sample.json.posts.id\": obj.id,\r\n            \"com.k2.sample.json.posts.userId\": obj.userId,\r\n            \"com.k2.sample.json.posts.title\": obj.title,\r\n            \"com.k2.sample.json.posts.body\": obj.body\r\n        });\r\n    };\r\n    xhr.open(\"GET\", 'https://jsonplaceholder.typicode.com/posts/' + properties[\"com.k2.sample.json.posts.id\"]);\r\n    xhr.send();\r\n}\r\n\r\nfunction onexecutePostsGetByUserId(parameters: SingleRecord, properties: SingleRecord) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange = function() {\r\n        if (xhr.readyState !== 4) return;\r\n        if (xhr.status !== 200) throw new Error(\"Failed with status \" + xhr.status);\r\n        \r\n        //console.log(xhr.responseText);\r\n        var obj = JSON.parse(xhr.responseText);\r\n        for (var key in obj) {\r\n            postResult({\r\n                \"com.k2.sample.json.posts.id\": obj[key].id,\r\n                \"com.k2.sample.json.posts.userId\": obj[key].userId,\r\n                \"com.k2.sample.json.posts.title\": obj[key].title,\r\n                \"com.k2.sample.json.posts.body\": obj[key].body\r\n            });\r\n        }\r\n    };\r\n    xhr.open(\"GET\", 'https://jsonplaceholder.typicode.com/posts?userId=' + properties[\"com.k2.sample.json.posts.userId\"]);\r\n    xhr.send();\r\n}\r\n\r\nfunction onexecutePostsCreate(parameters: SingleRecord, properties: SingleRecord) {\r\n    var data = JSON.stringify({\r\n        \"userId\": properties[\"com.k2.sample.json.posts.userId\"],\r\n        \"title\": properties[\"com.k2.sample.json.posts.title\"],\r\n        \"body\": properties[\"com.k2.sample.json.posts.body\"]\r\n      });\r\n\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange = function() {\r\n        if (xhr.readyState !== 4) return;\r\n        // look for 'created' code\r\n        if (xhr.status !== 201) throw new Error(\"Failed with status \" + xhr.status);\r\n        \r\n        //console.log(xhr.responseText);\r\n        var obj = JSON.parse(xhr.responseText);\r\n        postResult({\r\n            \"com.k2.sample.json.posts.id\": obj.id,\r\n            \"com.k2.sample.json.posts.userId\": obj.userId,\r\n            \"com.k2.sample.json.posts.title\": obj.title,\r\n            \"com.k2.sample.json.posts.body\": obj.body\r\n        });\r\n    };\r\n    xhr.open(\"POST\", \"https://jsonplaceholder.typicode.com/posts\");\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    xhr.send(data);\r\n}\r\n\r\nfunction onexecutePostsUpdate(parameters: SingleRecord, properties: SingleRecord) {\r\n    var data = JSON.stringify({\r\n        \"userId\": properties[\"com.k2.sample.json.posts.userId\"],\r\n        \"title\": properties[\"com.k2.sample.json.posts.title\"],\r\n        \"body\": properties[\"com.k2.sample.json.posts.body\"]\r\n      });\r\n\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange = function() {\r\n        if (xhr.readyState !== 4) return;\r\n        if (xhr.status !== 200) throw new Error(\"Failed with status \" + xhr.status);\r\n        \r\n        //console.log(xhr.responseText);\r\n        var obj = JSON.parse(xhr.responseText);\r\n        postResult({\r\n            \"com.k2.sample.json.posts.id\": obj.id,\r\n            \"com.k2.sample.json.posts.userId\": obj.userId,\r\n            \"com.k2.sample.json.posts.title\": obj.title,\r\n            \"com.k2.sample.json.posts.body\": obj.body\r\n        });\r\n    };\r\n    xhr.open(\"PUT\", 'https://jsonplaceholder.typicode.com/posts/' + properties[\"com.k2.sample.json.posts.id\"]);\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    xhr.send(data);\r\n}\r\n\r\nfunction onexecutePostsDelete(parameters: SingleRecord, properties: SingleRecord) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange = function() {\r\n        if (xhr.readyState !== 4) return;\r\n        if (xhr.status !== 200) throw new Error(\"Failed with status \" + xhr.status);\r\n        //console.log(xhr.responseText);\r\n    };\r\n    xhr.open(\"DELETE\", 'https://jsonplaceholder.typicode.com/posts/' + properties[\"com.k2.sample.json.posts.id\"]);\r\n    xhr.setRequestHeader(\"Content-Type\", \"application/json\");\r\n    xhr.send();\r\n}\r\n\r\nfunction onexecuteCommentsGetList(parameters: SingleRecord, properties: SingleRecord) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange = function() {\r\n        if (xhr.readyState !== 4) return;\r\n        if (xhr.status !== 200) throw new Error(\"Failed with status \" + xhr.status);\r\n        \r\n        //console.log(xhr.responseText);\r\n        var obj = JSON.parse(xhr.responseText);\r\n        for (var key in obj) {\r\n            postResult({\r\n                \"com.k2.sample.json.comments.id\": obj[key].id,\r\n                \"com.k2.sample.json.comments.postId\": obj[key].postId,\r\n                \"com.k2.sample.json.comments.name\": obj[key].name,\r\n                \"com.k2.sample.json.comments.email\": obj[key].email,\r\n                \"com.k2.sample.json.comments.body\": obj[key].body\r\n            });\r\n        }\r\n    };\r\n    xhr.open(\"GET\", 'https://jsonplaceholder.typicode.com/comments');\r\n    xhr.send();\r\n}\r\n\r\nfunction onexecuteCommentsGetById(parameters: SingleRecord, properties: SingleRecord) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange = function() {\r\n        if (xhr.readyState !== 4) return;\r\n        if (xhr.status !== 200) throw new Error(\"Failed with status \" + xhr.status);\r\n        \r\n        //console.log(xhr.responseText);\r\n        var obj = JSON.parse(xhr.responseText);\r\n        postResult({\r\n            \"com.k2.sample.json.comments.id\": obj.id,\r\n            \"com.k2.sample.json.comments.postId\": obj.postId,\r\n            \"com.k2.sample.json.comments.name\": obj.name,\r\n            \"com.k2.sample.json.comments.email\": obj.email,\r\n            \"com.k2.sample.json.comments.body\": obj.body\r\n        });\r\n    };\r\n    xhr.open(\"GET\", 'https://jsonplaceholder.typicode.com/comments/' + properties[\"com.k2.sample.json.comments.id\"]);\r\n    xhr.send();\r\n}\r\n\r\nfunction onexecuteCommentsGetByPostId(parameters: SingleRecord, properties: SingleRecord) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange = function() {\r\n        if (xhr.readyState !== 4) return;\r\n        if (xhr.status !== 200) throw new Error(\"Failed with status \" + xhr.status);\r\n        \r\n        //console.log(xhr.responseText);\r\n        var obj = JSON.parse(xhr.responseText);\r\n        for (var key in obj) {\r\n            postResult({\r\n                \"com.k2.sample.json.comments.id\": obj[key].id,\r\n                \"com.k2.sample.json.comments.postId\": obj[key].postId,\r\n                \"com.k2.sample.json.comments.name\": obj[key].name,\r\n                \"com.k2.sample.json.comments.email\": obj[key].email,\r\n                \"com.k2.sample.json.comments.body\": obj[key].body\r\n            });\r\n        }\r\n    };\r\n    xhr.open(\"GET\", 'https://jsonplaceholder.typicode.com/comments?postId=' + properties[\"com.k2.sample.json.comments.postId\"]);\r\n    xhr.send();\r\n}\r\n\r\nfunction onexecuteToDosGetList(parameters: SingleRecord, properties: SingleRecord) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange = function() {\r\n        if (xhr.readyState !== 4) return;\r\n        if (xhr.status !== 200) throw new Error(\"Failed with status \" + xhr.status);\r\n        \r\n        //console.log(xhr.responseText);\r\n        var obj = JSON.parse(xhr.responseText);\r\n        for (var key in obj) {\r\n            postResult({\r\n                \"com.k2.sample.json.todos.id\": obj[key].id,\r\n                \"com.k2.sample.json.todos.userId\": obj[key].userId,\r\n                \"com.k2.sample.json.todos.title\": obj[key].title,\r\n                \"com.k2.sample.json.todos.completed\": obj[key].completed\r\n            });\r\n        }\r\n    };\r\n    xhr.open(\"GET\", 'https://jsonplaceholder.typicode.com/todos');\r\n    xhr.send();\r\n}\r\n\r\nfunction onexecuteToDosGetById(parameters: SingleRecord, properties: SingleRecord) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange = function() {\r\n        if (xhr.readyState !== 4) return;\r\n        if (xhr.status !== 200) throw new Error(\"Failed with status \" + xhr.status);\r\n        \r\n        //console.log(xhr.responseText);\r\n        var obj = JSON.parse(xhr.responseText);\r\n            postResult({\r\n                \"com.k2.sample.json.todos.id\": obj.id,\r\n                \"com.k2.sample.json.todos.userId\": obj.userId,\r\n                \"com.k2.sample.json.todos.title\": obj.title,\r\n                \"com.k2.sample.json.todos.completed\": obj.completed\r\n            });\r\n    };\r\n    xhr.open(\"GET\", 'https://jsonplaceholder.typicode.com/todos/' + properties[\"com.k2.sample.json.todos.id\"]);\r\n    xhr.send();\r\n}\r\n\r\nfunction onexecuteUsersGetList(parameters: SingleRecord, properties: SingleRecord) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange = function() {\r\n        if (xhr.readyState !== 4) return;\r\n        if (xhr.status !== 200) throw new Error(\"Failed with status \" + xhr.status);\r\n        \r\n        //console.log(xhr.responseText);\r\n        var obj = JSON.parse(xhr.responseText);\r\n        for (var key in obj) {\r\n            postResult({\r\n                \"com.k2.sample.json.users.id\": obj[key].id,\r\n                \"com.k2.sample.json.users.name\": obj[key].name,\r\n                \"com.k2.sample.json.users.username\": obj[key].username,\r\n                \"com.k2.sample.json.users.email\": obj[key].email,\r\n                \"com.k2.sample.json.users.address.street\": obj[key].address.street,\r\n                \"com.k2.sample.json.users.address.suite\": obj[key].address.suite,\r\n                \"com.k2.sample.json.users.address.city\": obj[key].address.city,\r\n                \"com.k2.sample.json.users.address.geo.lat\": obj[key].address.geo.lat,\r\n                \"com.k2.sample.json.users.address.geo.lng\": obj[key].address.geo.lng,\r\n                \"com.k2.sample.json.users.phone\": obj[key].phone,\r\n                \"com.k2.sample.json.users.website\": obj[key].website,\r\n                \"com.k2.sample.json.users.company.name\": obj[key].company.name,\r\n                \"com.k2.sample.json.users.company.catchPhrase\": obj[key].company.catchPhrase,\r\n                \"com.k2.sample.json.users.company.bs\": obj[key].company.bs\r\n            });\r\n        }\r\n    };\r\n    xhr.open(\"GET\", 'https://jsonplaceholder.typicode.com/users');\r\n    xhr.send();\r\n}\r\n\r\nfunction onexecuteUsersGetById(parameters: SingleRecord, properties: SingleRecord) {\r\n    var xhr = new XMLHttpRequest();\r\n    xhr.onreadystatechange = function() {\r\n        if (xhr.readyState !== 4) return;\r\n        if (xhr.status !== 200) throw new Error(\"Failed with status \" + xhr.status);\r\n        \r\n        //console.log(xhr.responseText);\r\n        var obj = JSON.parse(xhr.responseText);\r\n        postResult({\r\n            \"com.k2.sample.json.users.id\": obj.id,\r\n            \"com.k2.sample.json.users.name\": obj.name,\r\n            \"com.k2.sample.json.users.username\": obj.username,\r\n            \"com.k2.sample.json.users.email\": obj.email,\r\n            \"com.k2.sample.json.users.address.street\": obj.address.street,\r\n            \"com.k2.sample.json.users.address.suite\": obj.address.suite,\r\n            \"com.k2.sample.json.users.address.city\": obj.address.city,\r\n            \"com.k2.sample.json.users.address.geo.lat\": obj.address.geo.lat,\r\n            \"com.k2.sample.json.users.address.geo.lng\": obj.address.geo.lng,\r\n            \"com.k2.sample.json.users.phone\": obj.phone,\r\n            \"com.k2.sample.json.users.website\": obj.website,\r\n            \"com.k2.sample.json.users.company.name\": obj.company.name,\r\n            \"com.k2.sample.json.users.company.catchPhrase\": obj.company.catchPhrase,\r\n            \"com.k2.sample.json.users.company.bs\": obj.company.bs\r\n        });\r\n    };\r\n    xhr.open(\"GET\", 'https://jsonplaceholder.typicode.com/users/' + properties[\"com.k2.sample.json.users.id\"]);\r\n    xhr.send();\r\n}"],"names":["onexecuteToDosGetList","parameters","properties","xhr","XMLHttpRequest","onreadystatechange","readyState","status","Error","obj","JSON","parse","responseText","key","postResult","id","userId","title","completed","open","send","metadata","ondescribe","postSchema","objects","displayName","description","type","methods","outputs","inputs","requiredInputs","onexecute","objectName","methodName","body","onexecutePostsGetById","onexecutePostsGetByUserId","data","stringify","setRequestHeader","onexecutePostsCreate","onexecutePostsUpdate","onexecutePostsDelete","onexecutePosts","postId","name","email","onexecuteCommentsGetById","onexecuteCommentsGetByPostId","onexecuteComments","onexecuteToDosGetById","onexecuteToDos","username","address","street","suite","city","geo","lat","lng","phone","website","company","catchPhrase","bs","onexecuteUsersGetById","onexecuteUsers"],"mappings":"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"}